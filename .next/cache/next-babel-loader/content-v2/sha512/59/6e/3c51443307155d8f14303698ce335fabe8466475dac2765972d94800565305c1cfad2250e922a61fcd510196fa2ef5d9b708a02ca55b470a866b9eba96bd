{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport CloudUploadSharpIcon from '@material-ui/icons/CloudUploadSharp';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn'; // core components\n\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport styles from \"assets/jss/nextjs-material-kit/pages/loginPage.js\";\nimport image from \"../assets/img/beach3.jpg\";\nimport fire from '../config/fire-config';\nimport { useRouter } from 'next/router';\nconst useStyles = makeStyles(styles);\nexport default function hisProductUploadPage(props) {\n  const router = useRouter(); // Hook to capture input fields\n\n  const {\n    0: productName,\n    1: setProductName\n  } = useState('');\n  const {\n    0: productImage,\n    1: setProductImage\n  } = useState('');\n  const {\n    0: productDescription,\n    1: setProductDescription\n  } = useState('');\n  const {\n    0: productPrice,\n    1: setProductPrice\n  } = useState('');\n  const {\n    0: notification,\n    1: setNotification\n  } = useState('');\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n\n  const handleChange = e => {\n    console.log('clicked');\n  };\n\n  console.log(productName); // Handle submit function\n\n  const handleSubmit = e => {\n    e.preventDefault(); // e.target.elements.productName.value\n\n    fire.firestore().collection('his-product').add({\n      productName: e.target.elements.productName.value,\n      productImage: e.target.elements.productImage.value,\n      productDescription: e.target.elements.productDescription.value,\n      productPrice: e.target.elements.productPrice.value\n    }); // Set Title & Content to blank\n\n    setProductName('');\n    setProductImage('');\n    setProductDescription('');\n    setProductPrice('');\n    setNotification('Product uploaded'); //   Clear Notification\n\n    setTimeout(() => {\n      setNotification('');\n    }, 2000); // Router PUSH to warehouse\n\n    router.push(\"/hisproducts\");\n  };\n\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  const classes = useStyles();\n  const rest = Object.assign({}, props);\n  return __jsx(\"div\", null, __jsx(Header, _extends({\n    absolute: true,\n    color: \"transparent\",\n    brand: \"The Only Ones Left\",\n    rightLinks: __jsx(HeaderLinks, null)\n  }, rest)), __jsx(\"div\", {\n    className: classes.pageHeader,\n    style: {\n      backgroundImage: \"url(\" + image + \")\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"top center\"\n    }\n  }, __jsx(\"div\", {\n    className: classes.container\n  }, __jsx(GridContainer, {\n    justify: \"center\"\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4\n  }, __jsx(Card, {\n    className: classes[cardAnimaton]\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: classes.form\n  }, __jsx(CardHeader, {\n    color: \"primary\",\n    className: classes.cardHeader\n  }, __jsx(\"h3\", null, \"Upload Product\"), __jsx(CloudUploadSharpIcon, {\n    className: classes.socialIcons\n  }), __jsx(\"div\", {\n    className: classes.socialLine\n  })), __jsx(CardBody, null, __jsx(CustomInput, {\n    labelText: \"Product Name\",\n    id: \"productName\",\n    formControlProps: {\n      fullWidth: true\n    },\n    onChange: handleChange,\n    inputProps: {\n      type: \"text\",\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(CreateIcon, {\n        className: classes.inputIconsColor\n      }))\n    }\n  }), __jsx(CustomInput, {\n    labelText: \"Image\",\n    id: \"productImage\",\n    formControlProps: {\n      fullWidth: true\n    },\n    onChange: ({\n      target\n    }) => setProductImage(target.value),\n    inputProps: {\n      type: \"text\",\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(CameraAltIcon, {\n        className: classes.inputIconsColor\n      }))\n    }\n  }), __jsx(CustomInput, {\n    labelText: \"Description\",\n    id: \"productDescription\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"text\",\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(DescriptionIcon, {\n        className: classes.inputIconsColor\n      })),\n      autoComplete: \"off\"\n    }\n  }), __jsx(CustomInput, {\n    labelText: \"Price\",\n    id: \"productPrice\",\n    formControlProps: {\n      fullWidth: true\n    },\n    onChange: ({\n      target\n    }) => setProductPrice(target.value),\n    inputProps: {\n      type: \"text\",\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(MonetizationOnIcon, {\n        className: classes.inputIconsColor\n      }))\n    }\n  })), __jsx(CardFooter, {\n    className: classes.cardFooter\n  }, __jsx(Button, {\n    type: \"submit\",\n    simple: true,\n    color: \"primary\",\n    size: \"lg\"\n  }, \"Upload\"))))))), __jsx(Footer, {\n    whiteFont: true\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}